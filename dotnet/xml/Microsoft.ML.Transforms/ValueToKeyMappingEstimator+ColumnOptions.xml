<Type Name="ValueToKeyMappingEstimator+ColumnOptions" FullName="Microsoft.ML.Transforms.ValueToKeyMappingEstimator+ColumnOptions">
  <TypeSignature Language="C#" Value="public sealed class ValueToKeyMappingEstimator.ColumnOptions : Microsoft.ML.Transforms.ValueToKeyMappingEstimator.ColumnOptionsBase" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ValueToKeyMappingEstimator/ColumnOptions extends Microsoft.ML.Transforms.ValueToKeyMappingEstimator/ColumnOptionsBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator.ColumnOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ValueToKeyMappingEstimator.ColumnOptions&#xA;Inherits ValueToKeyMappingEstimator.ColumnOptionsBase" />
  <TypeSignature Language="F#" Value="type ValueToKeyMappingEstimator.ColumnOptions = class&#xA;    inherit ValueToKeyMappingEstimator.ColumnOptionsBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Transforms.ValueToKeyMappingEstimator+ColumnOptionsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes how the transformer handles one column pair.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnOptions (string outputColumnName, string inputColumnName = null, int maximumNumberOfKeys = 1000000, Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality keyOrdinality = Microsoft.ML.Transforms.ValueToKeyMappingEstimator+KeyOrdinality.ByOccurrence, bool addKeyValueAnnotationsAsText = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outputColumnName, string inputColumnName, int32 maximumNumberOfKeys, valuetype Microsoft.ML.Transforms.ValueToKeyMappingEstimator/KeyOrdinality keyOrdinality, bool addKeyValueAnnotationsAsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Transforms.ValueToKeyMappingEstimator.ColumnOptions.#ctor(System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Transforms.ValueToKeyMappingEstimator.ColumnOptions : string * string * int * Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality * bool -&gt; Microsoft.ML.Transforms.ValueToKeyMappingEstimator.ColumnOptions" Usage="new Microsoft.ML.Transforms.ValueToKeyMappingEstimator.ColumnOptions (outputColumnName, inputColumnName, maximumNumberOfKeys, keyOrdinality, addKeyValueAnnotationsAsText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="maximumNumberOfKeys" Type="System.Int32" />
        <Parameter Name="keyOrdinality" Type="Microsoft.ML.Transforms.ValueToKeyMappingEstimator+KeyOrdinality" />
        <Parameter Name="addKeyValueAnnotationsAsText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="maximumNumberOfKeys">Maximum number of keys to keep per column when auto-training.</param>
        <param name="keyOrdinality">How items should be ordered when vectorized. If <see cref="F:Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality.ByOccurrence" /> choosen they will be in the order encountered.
            If <see cref="F:Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality.ByValue" />, items are sorted according to their default comparison, for example, text sorting will be case sensitive (for example, 'A' then 'Z' then 'a').</param>
        <param name="addKeyValueAnnotationsAsText">Whether key value annotations should be text, regardless of the actual input type.</param>
        <summary>
            Describes how the transformer handles one column pair.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>