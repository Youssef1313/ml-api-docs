<Type Name="RobustScalerEstimator" FullName="Microsoft.ML.Featurizers.RobustScalerEstimator">
  <TypeSignature Language="C#" Value="public sealed class RobustScalerEstimator : Microsoft.ML.IEstimator&lt;Microsoft.ML.Featurizers.RobustScalerTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RobustScalerEstimator extends System.Object implements class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.Featurizers.RobustScalerTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Featurizers.RobustScalerEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RobustScalerEstimator&#xA;Implements IEstimator(Of RobustScalerTransformer)" />
  <TypeSignature Language="F#" Value="type RobustScalerEstimator = class&#xA;    interface IEstimator&lt;RobustScalerTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Featurizers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.IEstimator&lt;Microsoft.ML.Featurizers.RobustScalerTransformer&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             RobustScalar Featurizer scales features using statistics that are robust to outliers, by removing the median and scaling the data according to the quantile range
             (defaults to IQR: Interquartile Range). Centering and scaling happen independently on each feature by computing the relevant statistics on the samples in the training set.
             Median and interquartile range are then stored to be used on later data using the transform method.
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | Yes |
             | Input column data type | Scalar of numeric type |
             | Output column data type | If input is byte, sbyte, short, ushort, or float then returns Float, else Double |
            
             The <xref:Microsoft.ML.Transforms.RobustScalerEstimator> is not a trivial estimator and needs training.
            
            
             ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.ML.Featurizers.RobustScalerExtensionClass.RobustScaler(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],System.Boolean,System.Boolean,System.Single,System.Single)" />
    <altmember cref="M:Microsoft.ML.Featurizers.RobustScalerExtensionClass.RobustScaler(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Boolean,System.Boolean,System.Single,System.Single)" />
  </Docs>
  <Members>
    <Member MemberName="Fit">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Featurizers.RobustScalerTransformer Fit (Microsoft.ML.IDataView input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.Featurizers.RobustScalerTransformer Fit(class Microsoft.ML.IDataView input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Featurizers.RobustScalerEstimator.Fit(Microsoft.ML.IDataView)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fit (input As IDataView) As RobustScalerTransformer" />
      <MemberSignature Language="F#" Value="abstract member Fit : Microsoft.ML.IDataView -&gt; Microsoft.ML.Featurizers.RobustScalerTransformer&#xA;override this.Fit : Microsoft.ML.IDataView -&gt; Microsoft.ML.Featurizers.RobustScalerTransformer" Usage="robustScalerEstimator.Fit input" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.IEstimator`1.Fit(Microsoft.ML.IDataView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Featurizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Featurizers.RobustScalerTransformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.ML.IDataView" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public Microsoft.ML.SchemaShape GetOutputSchema (Microsoft.ML.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.SchemaShape GetOutputSchema(class Microsoft.ML.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Featurizers.RobustScalerEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSchema : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape&#xA;override this.GetOutputSchema : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape" Usage="robustScalerEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.IEstimator`1.GetOutputSchema(Microsoft.ML.SchemaShape)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Featurizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
