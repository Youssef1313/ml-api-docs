<Type Name="ImageEstimatorsCatalog" FullName="Microsoft.ML.ImageEstimatorsCatalog">
  <TypeSignature Language="C#" Value="public static class ImageEstimatorsCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImageEstimatorsCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.ImageEstimatorsCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module ImageEstimatorsCatalog" />
  <TypeSignature Language="F#" Value="type ImageEstimatorsCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Runtime.ImageAnalytics</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConvertToGrayscale">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.ImageAnalytics.ImageGrayscalingEstimator ConvertToGrayscale (this Microsoft.ML.TransformsCatalog catalog, params ValueTuple&lt;string,string&gt;[] columnPairs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.ImageAnalytics.ImageGrayscalingEstimator ConvertToGrayscale(class Microsoft.ML.TransformsCatalog catalog, valuetype System.ValueTuple`2&lt;string, string&gt;[] columnPairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale(Microsoft.ML.TransformsCatalog,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConvertToGrayscale (catalog As TransformsCatalog, ParamArray columnPairs As ValueTuple(Of String, String)()) As ImageGrayscalingEstimator" />
      <MemberSignature Language="F#" Value="static member ConvertToGrayscale : Microsoft.ML.TransformsCatalog * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.ImageAnalytics.ImageGrayscalingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale (catalog, columnPairs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ImageAnalytics.ImageGrayscalingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" Index="0" />
        <Parameter Name="columnPairs" Type="System.ValueTuple&lt;System.String,System.String&gt;[]" Index="1" FrameworkAlternate="ml-dotnet">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "outputColumnName", "inputColumnName" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columnPairs">The name of the columns containing the name of the resulting output column (first item of the tuple), and the paths of the images to work on (second item of the tuple).</param>
        <summary>
        Converts the images to grayscale.
      </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

          ## Remarks 
          The images might be converted to grayscale to reduce the complexity of the model.
          The grayed out images contain less information to process than the colored images.
          Another use case for converting to grayscale is to generate new images out of the existing ones, so you can have a larger dataset,        
          a technique known as [data augmentation](http://www.stat.harvard.edu/Faculty_Content/meng/JCGS01.pdf)</a>.
          
          For end-to-end image processing pipelines, and scenarios in your applications, see the 
          [examples in the machinelearning-samples github repository](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started).</a>
        ]]></format>
          <seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" />
          <seealso cref="T:Microsoft.ML.ImageAnalytics.ImageLoadingEstimator" />
        </remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ConvertToGrayscale](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ImageAnalytics/ConvertToGrayscale.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ExtractPixels">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator ExtractPixels (this Microsoft.ML.TransformsCatalog catalog, params Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator ExtractPixels(class Microsoft.ML.TransformsCatalog catalog, class Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels(Microsoft.ML.TransformsCatalog,Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractPixels (catalog As TransformsCatalog, ParamArray columns As ImagePixelExtractingEstimator.ColumnInfo()) As ImagePixelExtractingEstimator" />
      <MemberSignature Language="F#" Value="static member ExtractPixels : Microsoft.ML.TransformsCatalog * Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColumnInfo[] -&gt; Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columns">The name of the columns containing the image paths, and per-column configurations.</param>
        <summary>
        Extracts the pixels from the input images and, converts them into a vector of numbers. This can be further used as feature by the algorithms added to the pipeline.   
      </summary>
        <returns>To be added.</returns>
        <remarks>
        The ImagePixelExtractingEstimator extracts the pixels from the input images and, converts them into a vector of numbers.
        This can be further used as feature by the algorithms added to the pipeline.

        ImagePixelExtractingEstimator expects a <see cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator" />  in the pipeline, before it is used.
        For end-to-end image processing pipelines, and scenarios in your applications, see the
        <a href="https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started">examples in the machinelearning-samples github repository</a>.
        <seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /><seealso cref="T:Microsoft.ML.ImageAnalytics.ImageLoadingEstimator" /><seealso cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractPixels">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator ExtractPixels (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColorBits colors = Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator+ColorBits.Rgb, bool interleave = false, float scale = 1, float offset = 0, bool asFloat = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator ExtractPixels(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator/ColorBits colors, bool interleave, float32 scale, float32 offset, bool asFloat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColorBits,System.Boolean,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExtractPixels (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional colors As ImagePixelExtractingEstimator.ColorBits = Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator+ColorBits.Rgb, Optional interleave As Boolean = false, Optional scale As Single = 1, Optional offset As Single = 0, Optional asFloat As Boolean = true) As ImagePixelExtractingEstimator" />
      <MemberSignature Language="F#" Value="static member ExtractPixels : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColorBits * bool * single * single * bool -&gt; Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels (catalog, outputColumnName, inputColumnName, colors, interleave, scale, offset, asFloat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="colors" Type="Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator+ColorBits" />
        <Parameter Name="interleave" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="offset" Type="System.Single" />
        <Parameter Name="asFloat" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog"> The transform's catalog.</param>
        <param name="outputColumnName"> Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName"> Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="colors"> Specifies which <see cref="T:Microsoft.ML.ImageAnalytics.ImagePixelExtractingEstimator.ColorBits" /> to extract from the image. The order of colors is: Alpha, Red, Green Blue.</param>
        <param name="interleave">Wheather to interleave the pixels, meaning keep them in the `ARGB ARGB` order, or leave them separated in the planar form, where the colors are outputed one by one
            alpha, red, green, blue for all the pixels of the image. </param>
        <param name="scale">Scale color pixel value by this amount.</param>
        <param name="offset">Offset color pixel value by this amount.</param>
        <param name="asFloat">Output the array as float array. If false, output as byte array.</param>
        <summary>
        Extracts the pixels from the input images and, converts them into a vector of numbers. This can be further used as feature by the algorithms added to the pipeline.   
      </summary>
        <returns>To be added.</returns>
        <remarks>
        The ImagePixelExtractingEstimator extracts the pixels from the input images and, converts them into a vector of numbers.
        This can be further used as feature by the algorithms added to the pipeline.

        ImagePixelExtractingEstimator expects a <see cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator" />  in the pipeline, before it is used.
        For end-to-end image processing pipelines, and scenarios in your applications, see the
        <a href="https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started">examples in the machinelearning-samples github repository</a>.
        <seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /><seealso cref="T:Microsoft.ML.ImageAnalytics.ImageLoadingEstimator" /><seealso cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ExtractPixels](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ImageAnalytics/ExtractPixels.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LoadImages">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.ImageAnalytics.ImageLoadingEstimator LoadImages (this Microsoft.ML.TransformsCatalog catalog, string imageFolder, params ValueTuple&lt;string,string&gt;[] columnPairs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.ImageAnalytics.ImageLoadingEstimator LoadImages(class Microsoft.ML.TransformsCatalog catalog, string imageFolder, valuetype System.ValueTuple`2&lt;string, string&gt;[] columnPairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.LoadImages(Microsoft.ML.TransformsCatalog,System.String,System.ValueTuple{System.String,System.String}[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LoadImages (catalog As TransformsCatalog, imageFolder As String, ParamArray columnPairs As ValueTuple(Of String, String)()) As ImageLoadingEstimator" />
      <MemberSignature Language="F#" Value="static member LoadImages : Microsoft.ML.TransformsCatalog * string * ValueTuple&lt;string, string&gt;[] -&gt; Microsoft.ML.ImageAnalytics.ImageLoadingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.LoadImages (catalog, imageFolder, columnPairs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ImageAnalytics.ImageLoadingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" Index="0" />
        <Parameter Name="imageFolder" Type="System.String" Index="1" />
        <Parameter Name="columnPairs" Type="System.ValueTuple&lt;System.String,System.String&gt;[]" Index="2" FrameworkAlternate="ml-dotnet">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "outputColumnName", "inputColumnName" })</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="imageFolder">The images folder.</param>
        <param name="columnPairs">The name of the columns containing the image paths(first item of the tuple), and the name of the resulting output column (second item of the tuple).</param>
        <summary>
            Loads the images from the <see cref="F:Microsoft.ML.ImageAnalytics.ImageLoadingTransformer.ImageFolder" /> into memory.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The image get loaded in memory as a <see cref="T:System.Drawing.Bitmap" /> type.
            Loading is the first step of almost every pipeline that does image processing, and further analysis on images.
            The images to load need to be in the formats supported by <see cref="T:System.Drawing.Bitmap" />.
            For end-to-end image processing pipelines, and scenarios in your applications, see the
            <a href="https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started"> examples in the machinelearning-samples github repository.</a><seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[LoadImage](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ImageAnalytics/LoadImage.cs)]
            ]]></format>
        </example>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[LoadImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ImageAnalytics/LoadImages.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ResizeImages">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.ImageAnalytics.ImageResizingEstimator ResizeImages (this Microsoft.ML.TransformsCatalog catalog, params Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ColumnInfo[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.ImageAnalytics.ImageResizingEstimator ResizeImages(class Microsoft.ML.TransformsCatalog catalog, class Microsoft.ML.ImageAnalytics.ImageResizingEstimator/ColumnInfo[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(Microsoft.ML.TransformsCatalog,Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ColumnInfo[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResizeImages (catalog As TransformsCatalog, ParamArray columns As ImageResizingEstimator.ColumnInfo()) As ImageResizingEstimator" />
      <MemberSignature Language="F#" Value="static member ResizeImages : Microsoft.ML.TransformsCatalog * Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ColumnInfo[] -&gt; Microsoft.ML.ImageAnalytics.ImageResizingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ResizeImages (catalog, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ImageAnalytics.ImageResizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="columns" Type="Microsoft.ML.ImageAnalytics.ImageResizingEstimator+ColumnInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="columns">The names of the columns to transform.</param>
        <summary>
            Resizes the images to a new width and height.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            In image processing pipelines, often machine learning practitioner make use of<a href="https://blogs.msdn.microsoft.com/mlserver/2017/04/12/image-featurization-with-a-pre-trained-deep-neural-network-model/">
            pre - trained DNN featurizers</a> to extract features for usage in the machine learning algorithms.
            Those pre-trained models have a defined width and height for their input images, so often, after getting loaded, the images will need to get resized before
            further processing.
            The new width and height, as well as other properties of resizing, like type of scaling (uniform, or non-uniform), and whether to pad the image,
            or just crop it can be specified separately for each column loaded, through the <see cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ColumnInfo" />.
            <seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /><seealso cref="T:Microsoft.ML.ImageAnalytics.ImageLoadingEstimator" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ResizeImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ImageAnalytics/ResizeImages.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ResizeImages">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.ImageAnalytics.ImageResizingEstimator ResizeImages (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, int imageWidth, int imageHeight, string inputColumnName = null, Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ResizingKind resizing = Microsoft.ML.ImageAnalytics.ImageResizingEstimator+ResizingKind.IsoCrop, Microsoft.ML.ImageAnalytics.ImageResizingEstimator.Anchor cropAnchor = Microsoft.ML.ImageAnalytics.ImageResizingEstimator+Anchor.Center);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.ImageAnalytics.ImageResizingEstimator ResizeImages(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, int32 imageWidth, int32 imageHeight, string inputColumnName, valuetype Microsoft.ML.ImageAnalytics.ImageResizingEstimator/ResizingKind resizing, valuetype Microsoft.ML.ImageAnalytics.ImageResizingEstimator/Anchor cropAnchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(Microsoft.ML.TransformsCatalog,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ResizingKind,Microsoft.ML.ImageAnalytics.ImageResizingEstimator.Anchor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ResizeImages (catalog As TransformsCatalog, outputColumnName As String, imageWidth As Integer, imageHeight As Integer, Optional inputColumnName As String = null, Optional resizing As ImageResizingEstimator.ResizingKind = Microsoft.ML.ImageAnalytics.ImageResizingEstimator+ResizingKind.IsoCrop, Optional cropAnchor As ImageResizingEstimator.Anchor = Microsoft.ML.ImageAnalytics.ImageResizingEstimator+Anchor.Center) As ImageResizingEstimator" />
      <MemberSignature Language="F#" Value="static member ResizeImages : Microsoft.ML.TransformsCatalog * string * int * int * string * Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ResizingKind * Microsoft.ML.ImageAnalytics.ImageResizingEstimator.Anchor -&gt; Microsoft.ML.ImageAnalytics.ImageResizingEstimator" Usage="Microsoft.ML.ImageEstimatorsCatalog.ResizeImages (catalog, outputColumnName, imageWidth, imageHeight, inputColumnName, resizing, cropAnchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.ImageAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.ImageAnalytics.ImageResizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="imageWidth" Type="System.Int32" />
        <Parameter Name="imageHeight" Type="System.Int32" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="resizing" Type="Microsoft.ML.ImageAnalytics.ImageResizingEstimator+ResizingKind" />
        <Parameter Name="cropAnchor" Type="Microsoft.ML.ImageAnalytics.ImageResizingEstimator+Anchor" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the resulting output column.</param>
        <param name="imageWidth">The transformed image width.</param>
        <param name="imageHeight">The transformed image height.</param>
        <param name="inputColumnName">Name of the input column.</param>
        <param name="resizing"> The type of image resizing as specified in <see cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator.ResizingKind" />.</param>
        <param name="cropAnchor">Where to place the anchor, to start cropping. Options defined in <see cref="T:Microsoft.ML.ImageAnalytics.ImageResizingEstimator.Anchor" /></param>
        <summary>
            Resizes the images to a new width and height.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            In image processing pipelines, often machine learning practitioner make use of<a href="https://blogs.msdn.microsoft.com/mlserver/2017/04/12/image-featurization-with-a-pre-trained-deep-neural-network-model/">
            pre-trained DNN featurizers</a> to extract features for usage in the machine learning algorithms.
            Those pre-trained models have a defined width and height for their input images, so often, after getting loaded, the images will need to get resized before
            further processing.
            The new width and height can be specified in the <paramref name="imageWidth" /> and <paramref name="imageHeight" /><seealso cref="T:Microsoft.ML.ImageEstimatorsCatalog" /><seealso cref="T:Microsoft.ML.ImageAnalytics.ImageLoadingEstimator" /></remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ResizeImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ImageAnalytics/ResizeImages.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>