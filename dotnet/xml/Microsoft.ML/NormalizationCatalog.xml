<Type Name="NormalizationCatalog" FullName="Microsoft.ML.NormalizationCatalog">
  <TypeSignature Language="C#" Value="public static class NormalizationCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NormalizationCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.NormalizationCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module NormalizationCatalog" />
  <TypeSignature Language="F#" Value="type NormalizationCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for normalizer operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.NormalizingEstimator Normalize (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.NormalizingEstimator.NormalizationMode mode = Microsoft.ML.Transforms.NormalizingEstimator+NormalizationMode.MinMax);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.NormalizingEstimator Normalize(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.NormalizingEstimator/NormalizationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.Normalize(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.NormalizingEstimator.NormalizationMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Normalize (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional mode As NormalizingEstimator.NormalizationMode = Microsoft.ML.Transforms.NormalizingEstimator+NormalizationMode.MinMax) As NormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member Normalize : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.Transforms.NormalizingEstimator.NormalizationMode -&gt; Microsoft.ML.Transforms.NormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.Normalize (catalog, outputColumnName, inputColumnName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.NormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="mode" Type="Microsoft.ML.Transforms.NormalizingEstimator+NormalizationMode" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform catalog</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of the column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="mode">The <see cref="T:Microsoft.ML.Transforms.NormalizingEstimator.NormalizationMode" /> used to map the old values in the new scale. </param>
        <summary>
            Normalize (rescale) the column according to the specified <paramref name="mode" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[Normalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Normalizer.cs)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="NormalizeGlobalContrast">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator NormalizeGlobalContrast (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, bool ensureZeroMean = true, bool ensureUnitStandardDeviation = false, float scale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator NormalizeGlobalContrast(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, bool ensureZeroMean, bool ensureUnitStandardDeviation, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeGlobalContrast(Microsoft.ML.TransformsCatalog,System.String,System.String,System.Boolean,System.Boolean,System.Single)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeGlobalContrast (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional ensureZeroMean As Boolean = true, Optional ensureUnitStandardDeviation As Boolean = false, Optional scale As Single = 1) As GlobalContrastNormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeGlobalContrast : Microsoft.ML.TransformsCatalog * string * string * bool * bool * single -&gt; Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeGlobalContrast (catalog, outputColumnName, inputColumnName, ensureZeroMean, ensureUnitStandardDeviation, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.GlobalContrastNormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="ensureZeroMean" Type="System.Boolean" />
        <Parameter Name="ensureUnitStandardDeviation" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="ensureZeroMean">If <see langword="true" />, subtract mean from each value before normalizing and use the raw input otherwise.</param>
        <param name="ensureUnitStandardDeviation">If <see langword="true" />, resulted vector's standard deviation would be one. Otherwise, resulted vector's L2-norm would be one.</param>
        <param name="scale">Scale features by this value.</param>
        <summary>
            Takes column filled with a vector of floats and computes global contrast normalization of it. By setting <paramref name="ensureZeroMean" /> to <see langword="true" />,
            a pre-processing step would be applied to make the specified column's mean be a zero vector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[GlobalContrastNormalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ProjectionTransforms.cs?range=1-6,12-112)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="NormalizeLpNorm">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.Transforms.LpNormNormalizingEstimator NormalizeLpNorm (this Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName = null, Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction norm = Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase+NormFunction.L2, bool ensureZeroMean = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.Transforms.LpNormNormalizingEstimator NormalizeLpNorm(class Microsoft.ML.TransformsCatalog catalog, string outputColumnName, string inputColumnName, valuetype Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase/NormFunction norm, bool ensureZeroMean) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.NormalizationCatalog.NormalizeLpNorm(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NormalizeLpNorm (catalog As TransformsCatalog, outputColumnName As String, Optional inputColumnName As String = null, Optional norm As LpNormNormalizingEstimatorBase.NormFunction = Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase+NormFunction.L2, Optional ensureZeroMean As Boolean = false) As LpNormNormalizingEstimator" />
      <MemberSignature Language="F#" Value="static member NormalizeLpNorm : Microsoft.ML.TransformsCatalog * string * string * Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction * bool -&gt; Microsoft.ML.Transforms.LpNormNormalizingEstimator" Usage="Microsoft.ML.NormalizationCatalog.NormalizeLpNorm (catalog, outputColumnName, inputColumnName, norm, ensureZeroMean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Transforms</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Transforms.LpNormNormalizingEstimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.TransformsCatalog" RefType="this" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="inputColumnName" Type="System.String" />
        <Parameter Name="norm" Type="Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase+NormFunction" />
        <Parameter Name="ensureZeroMean" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName" />.</param>
        <param name="inputColumnName">Name of column to transform. If set to <see langword="null" />, the value of the <paramref name="outputColumnName" /> will be used as source.</param>
        <param name="norm">Type of norm to use to normalize each sample. The indicated norm of the resulted vector will be normalized to one.</param>
        <param name="ensureZeroMean">If <see langword="true" />, subtract mean from each value before normalizing and use the raw input otherwise.</param>
        <summary>
            Takes column filled with a vector of floats and normalize its <paramref name="norm" /> to one. By setting <paramref name="ensureZeroMean" /> to <see langword="true" />,
            a pre-processing step would be applied to make the specified column's mean be a zero vector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            [!code-csharp[LpNormalize](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/ProjectionTransforms.cs?range=1-6,12-112)]
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>