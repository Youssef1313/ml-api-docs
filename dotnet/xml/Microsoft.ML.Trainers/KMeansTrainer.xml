<Type Name="KMeansTrainer" FullName="Microsoft.ML.Trainers.KMeansTrainer">
  <TypeSignature Language="C#" Value="public class KMeansTrainer : Microsoft.ML.Trainers.TrainerEstimatorBase&lt;Microsoft.ML.Data.ClusteringPredictionTransformer&lt;Microsoft.ML.Trainers.KMeansModelParameters&gt;,Microsoft.ML.Trainers.KMeansModelParameters&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KMeansTrainer extends Microsoft.ML.Trainers.TrainerEstimatorBase`2&lt;class Microsoft.ML.Data.ClusteringPredictionTransformer`1&lt;class Microsoft.ML.Trainers.KMeansModelParameters&gt;, class Microsoft.ML.Trainers.KMeansModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.KMeansTrainer" />
  <TypeSignature Language="VB.NET" Value="Public Class KMeansTrainer&#xA;Inherits TrainerEstimatorBase(Of ClusteringPredictionTransformer(Of KMeansModelParameters), KMeansModelParameters)" />
  <TypeSignature Language="F#" Value="type KMeansTrainer = class&#xA;    inherit TrainerEstimatorBase&lt;ClusteringPredictionTransformer&lt;KMeansModelParameters&gt;, KMeansModelParameters&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.KMeansClustering</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.TrainerEstimatorBase&lt;Microsoft.ML.Data.ClusteringPredictionTransformer&lt;Microsoft.ML.Trainers.KMeansModelParameters&gt;,Microsoft.ML.Trainers.KMeansModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.ML.Data.ClusteringPredictionTransformer&lt;Microsoft.ML.Trainers.KMeansModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">Microsoft.ML.Trainers.KMeansModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1" /> for training a KMeans clusterer
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
             To create this trainer, use [KMeans](xref:Microsoft.ML.KMeansClusteringExtensions.KMeans(Microsoft.ML.ClusteringCatalog.ClusteringTrainers,System.String,System.String,System.Int32))
             or [Kmeans(Options)](xref:Microsoft.ML.KMeansClusteringExtensions.KMeans(Microsoft.ML.ClusteringCatalog.ClusteringTrainers,Microsoft.ML.Trainers.KMeansTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-clustering.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Clustering |
             | Is normalization required? | Yes |
             | Is caching required? | Yes |
             | Required NuGet in addition to Microsoft.ML | None |
            
             ### Training Algorithm Details
             [K-means](https://en.wikipedia.org/wiki/K-means_clustering) is a popular clustering algorithm.
             With K-means, the data is clustered into a specified number of clusters in order to minimize the within-cluster sum of squared distances.
             K-means++ improves upon K-means by using the [Yinyang K-Means](https://research.microsoft.com/apps/pubs/default.aspx?id=252149)
             method for choosing the initial cluster centers.
             K-Means++ accelerates K-Means up to an order of magnitude while producing exactly the same clustering results (modulo floating point precision issues).
             K-Means++ observes that there is a lot of redundancy across iterations in the KMeans algorithms and most points do not change their clusters during an iteration.
             It uses various bounding techniques to identify this redundancy and eliminate many distance computations and optimize centroid computations.
            
             ### Scorning Function
             The output Score column contains the $L_2$-norm distance (i.e., [Euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance)) of the given input vector $\textbf{x}\in \mathbb{R}^n$ to each cluster's centroid.
             Assume that the centriod of the $c$-th cluster is $\textbf{m}_c \in \mathbb{R}^n$.
             The $c$-th value at the Score column would be $d_c = || \textbf{x} - \textbf{m}_c ||_2^2$.
             The predicted label is the index with the smallest value in a $K$ dimension vector $[d_{0}, \dots, d_{K-1}]$, where $K$ is the number of clusters.
            
             For more information on K-means, and K-means++ see:
             [K-means](https://en.wikipedia.org/wiki/K-means_clustering)
             [K-means++](https://en.wikipedia.org/wiki/K-means%2b%2b)
             ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.ML.Trainers.KMeansTrainer" />
  </Docs>
  <Members>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.KMeansTrainer.Info" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.TrainerInfo" Usage="Microsoft.ML.Trainers.KMeansTrainer.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.KMeansClustering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>