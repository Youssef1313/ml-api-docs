<Type Name="SdcaBinaryTrainerBase&lt;TModelParameters&gt;" FullName="Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;TModelParameters&gt;">
  <TypeSignature Language="C#" Value="public abstract class SdcaBinaryTrainerBase&lt;TModelParameters&gt; : Microsoft.ML.Trainers.SdcaTrainerBase&lt;Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;TModelParameters&gt;.BinaryArgumentBase,Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModelParameters&gt;,TModelParameters&gt; where TModelParameters : class, IPredictorProducing&lt;float&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SdcaBinaryTrainerBase`1&lt;class (class Microsoft.ML.IPredictorProducing`1&lt;float32&gt;) TModelParameters&gt; extends Microsoft.ML.Trainers.SdcaTrainerBase`3&lt;class Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1/BinaryArgumentBase&lt;!TModelParameters&gt;, class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;!TModelParameters&gt;, !TModelParameters&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SdcaBinaryTrainerBase(Of TModelParameters)&#xA;Inherits SdcaTrainerBase(Of SdcaBinaryTrainerBase(Of TModelParameters).BinaryArgumentBase, BinaryPredictionTransformer(Of TModelParameters), TModelParameters)" />
  <TypeSignature Language="F#" Value="type SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; IPredictorProducing&lt;single&gt;)&gt; = class&#xA;    inherit SdcaTrainerBase&lt;SdcaBinaryTrainerBase&lt;'ModelParameters&gt;.BinaryArgumentBase, BinaryPredictionTransformer&lt;'ModelParameters&gt;, 'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; IPredictorProducing&lt;single&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModelParameters">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.ML.IPredictorProducing&lt;System.Single&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.SdcaTrainerBase&lt;Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;TModelParameters&gt;+BinaryArgumentBase,Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModelParameters&gt;,TModelParameters&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TArgs">Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;TModelParameters&gt;+BinaryArgumentBase</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModelParameters&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModel">TModelParameters</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TModelParameters">To be added.</typeparam>
    <summary>
            SDCA is a general training algorithm for (generalized) linear models such as support vector machine, linear regression, logistic regression,
            and so on. SDCA binary classification trainer family includes several sealed members:
            (1) <see cref="T:Microsoft.ML.Trainers.SdcaNonCalibratedBinaryTrainer" /> supports general loss functions and returns <see cref="T:Microsoft.ML.Trainers.LinearBinaryModelParameters" />.
            (2) <see cref="T:Microsoft.ML.Trainers.SdcaBinaryTrainer" /> essentially trains a regularized logistic regression model. Because logistic regression
            naturally provide probability output, this generated model's type is <see cref="T:Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase`2" />.
            where <see langword="TSubModel" /> is <see cref="T:Microsoft.ML.Trainers.LinearBinaryModelParameters" /> and <see langword="TCalibrator " /> is <see cref="T:Microsoft.ML.Internal.Calibration.PlattCalibrator" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SdcaBinaryTrainerBase (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;TModelParameters&gt;.BinaryArgumentBase options, Microsoft.ML.ISupportSdcaClassificationLoss loss = null, bool doCalibration = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1/BinaryArgumentBase&lt;!TModelParameters&gt; options, class Microsoft.ML.ISupportSdcaClassificationLoss loss, bool doCalibration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.BinaryArgumentBase{`0},Microsoft.ML.ISupportSdcaClassificationLoss,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, options As SdcaBinaryTrainerBase(Of TModelParameters).BinaryArgumentBase, Optional loss As ISupportSdcaClassificationLoss = null, Optional doCalibration As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;)&gt; : Microsoft.ML.IHostEnvironment * Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;)&gt;.BinaryArgumentBase * Microsoft.ML.ISupportSdcaClassificationLoss * bool -&gt; Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;)&gt;" Usage="new Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;System.single&gt;)&gt; (env, options, loss, doCalibration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="options" Type="Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;TModelParameters&gt;+BinaryArgumentBase" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaClassificationLoss" />
        <Parameter Name="doCalibration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">To be added.</param>
        <param name="options">To be added.</param>
        <param name="loss">To be added.</param>
        <param name="doCalibration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SdcaBinaryTrainerBase (Microsoft.ML.IHostEnvironment env, string labelColumnName = &quot;Label&quot;, string featureColumnName = &quot;Features&quot;, string weightColumnName = null, Microsoft.ML.ISupportSdcaClassificationLoss loss = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, string labelColumnName, string featureColumnName, string weightColumnName, class Microsoft.ML.ISupportSdcaClassificationLoss loss, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.#ctor(Microsoft.ML.IHostEnvironment,System.String,System.String,System.String,Microsoft.ML.ISupportSdcaClassificationLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (env As IHostEnvironment, Optional labelColumnName As String = &quot;Label&quot;, Optional featureColumnName As String = &quot;Features&quot;, Optional weightColumnName As String = null, Optional loss As ISupportSdcaClassificationLoss = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;)&gt; : Microsoft.ML.IHostEnvironment * string * string * string * Microsoft.ML.ISupportSdcaClassificationLoss * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; -&gt; Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;)&gt;" Usage="new Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;System.single&gt;)&gt; (env, labelColumnName, featureColumnName, weightColumnName, loss, l2Const, l1Threshold, maxIterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="featureColumnName" Type="System.String" />
        <Parameter Name="weightColumnName" Type="System.String" />
        <Parameter Name="loss" Type="Microsoft.ML.ISupportSdcaClassificationLoss" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="labelColumnName">The label, or dependent variable.</param>
        <param name="featureColumnName">The features, or independent variables.</param>
        <param name="weightColumnName">The optional example weights.</param>
        <param name="loss">The custom loss.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckLabelCompatible">
      <MemberSignature Language="C#" Value="protected override void CheckLabelCompatible (Microsoft.ML.SchemaShape.Column labelCol);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CheckLabelCompatible(valuetype Microsoft.ML.SchemaShape/Column labelCol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.CheckLabelCompatible(Microsoft.ML.SchemaShape.Column)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CheckLabelCompatible (labelCol As SchemaShape.Column)" />
      <MemberSignature Language="F#" Value="override this.CheckLabelCompatible : Microsoft.ML.SchemaShape.Column -&gt; unit" Usage="sdcaBinaryTrainerBase.CheckLabelCompatible labelCol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelCol" Type="Microsoft.ML.SchemaShape+Column" />
      </Parameters>
      <Docs>
        <param name="labelCol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeSdcaBinaryClassifierSchemaShape">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.ML.SchemaShape.Column[] ComputeSdcaBinaryClassifierSchemaShape ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.ML.SchemaShape/Column[] ComputeSdcaBinaryClassifierSchemaShape() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.ComputeSdcaBinaryClassifierSchemaShape" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ComputeSdcaBinaryClassifierSchemaShape () As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="abstract member ComputeSdcaBinaryClassifierSchemaShape : unit -&gt; Microsoft.ML.SchemaShape.Column[]" Usage="sdcaBinaryTrainerBase.ComputeSdcaBinaryClassifierSchemaShape " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLinearBinaryModelParameters">
      <MemberSignature Language="C#" Value="protected Microsoft.ML.Trainers.LinearBinaryModelParameters CreateLinearBinaryModelParameters (Microsoft.ML.Data.VBuffer&lt;float&gt;[] weights, float[] bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.ML.Trainers.LinearBinaryModelParameters CreateLinearBinaryModelParameters(valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt;[] weights, float32[] bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.CreateLinearBinaryModelParameters(Microsoft.ML.Data.VBuffer{System.Single}[],System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateLinearBinaryModelParameters (weights As VBuffer(Of Single)(), bias As Single()) As LinearBinaryModelParameters" />
      <MemberSignature Language="F#" Value="member this.CreateLinearBinaryModelParameters : Microsoft.ML.Data.VBuffer&lt;single&gt;[] * single[] -&gt; Microsoft.ML.Trainers.LinearBinaryModelParameters" Usage="sdcaBinaryTrainerBase.CreateLinearBinaryModelParameters (weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Trainers.LinearBinaryModelParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weights" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;[]" />
        <Parameter Name="bias" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.ML.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.GetOutputColumnsCore(Microsoft.ML.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape.Column[]" Usage="sdcaBinaryTrainerBase.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.TrainerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.TrainerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.Info" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Info As TrainerInfo" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.ML.TrainerInfo" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;System.single&gt;)&gt;.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TrainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTransformer">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModelParameters&gt; MakeTransformer (TModelParameters model, Microsoft.Data.DataView.DataViewSchema trainSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Data.BinaryPredictionTransformer`1&lt;!TModelParameters&gt; MakeTransformer(!TModelParameters model, class Microsoft.Data.DataView.DataViewSchema trainSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.MakeTransformer(`0,Microsoft.Data.DataView.DataViewSchema)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MakeTransformer (model As TModelParameters, trainSchema As DataViewSchema) As BinaryPredictionTransformer(Of TModelParameters)" />
      <MemberSignature Language="F#" Value="override this.MakeTransformer : 'ModelParameters * Microsoft.Data.DataView.DataViewSchema -&gt; Microsoft.ML.Data.BinaryPredictionTransformer&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;single&gt;)&gt;" Usage="sdcaBinaryTrainerBase.MakeTransformer (model, trainSchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Data.BinaryPredictionTransformer&lt;TModelParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="TModelParameters" />
        <Parameter Name="trainSchema" Type="Microsoft.Data.DataView.DataViewSchema" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="trainSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictionKind">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.PredictionKind PredictionKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ML.PredictionKind PredictionKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.PredictionKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PredictionKind As PredictionKind" />
      <MemberSignature Language="F#" Value="member this.PredictionKind : Microsoft.ML.PredictionKind" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;System.single&gt;)&gt;.PredictionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.PredictionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShuffleData">
      <MemberSignature Language="C#" Value="protected override bool ShuffleData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShuffleData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Trainers.SdcaBinaryTrainerBase`1.ShuffleData" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ShuffleData As Boolean" />
      <MemberSignature Language="F#" Value="member this.ShuffleData : bool" Usage="Microsoft.ML.Trainers.SdcaBinaryTrainerBase&lt;'ModelParameters (requires 'ModelParameters : null and 'ModelParameters :&gt; Microsoft.ML.IPredictorProducing&lt;System.single&gt;)&gt;.ShuffleData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>