<Type Name="BinaryClassificationTrainers" FullName="Microsoft.ML.Trainers.BinaryClassificationTrainers">
  <TypeSignature Language="C#" Value="public static class BinaryClassificationTrainers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BinaryClassificationTrainers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.BinaryClassificationTrainers" />
  <TypeSignature Language="VB.NET" Value="Public Module BinaryClassificationTrainers" />
  <TypeSignature Language="F#" Value="type BinaryClassificationTrainers = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Binary Classification trainer estimators.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AveragedPerceptron">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; AveragedPerceptron (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.Runtime.IClassificationLoss lossFunction, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, float learningRate = 1, bool decreaseLearningRate = false, float l2RegularizerWeight = 0, int numIterations = 1, Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; AveragedPerceptron(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.Runtime.IClassificationLoss lossFunction, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, float32 learningRate, bool decreaseLearningRate, float32 l2RegularizerWeight, int32 numIterations, class System.Action`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.AveragedPerceptron(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.Runtime.IClassificationLoss,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Single,System.Boolean,System.Single,System.Int32,System.Action{Microsoft.ML.Runtime.Learners.LinearBinaryPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AveragedPerceptron (ctx As BinaryClassificationContext.BinaryClassificationTrainers, lossFunction As IClassificationLoss, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional learningRate As Single = 1, Optional decreaseLearningRate As Boolean = false, Optional l2RegularizerWeight As Single = 0, Optional numIterations As Integer = 1, Optional onFit As Action(Of LinearBinaryPredictor) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member AveragedPerceptron : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.Runtime.IClassificationLoss * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * single * bool * single * int * Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.Trainers.BinaryClassificationTrainers.AveragedPerceptron (ctx, lossFunction, label, features, weights, learningRate, decreaseLearningRate, l2RegularizerWeight, numIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="lossFunction" Type="Microsoft.ML.Runtime.IClassificationLoss" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="learningRate" Type="System.Single" />
        <Parameter Name="decreaseLearningRate" Type="System.Boolean" />
        <Parameter Name="l2RegularizerWeight" Type="System.Single" />
        <Parameter Name="numIterations" Type="System.Int32" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The binary classification context trainer object.</param>
        <param name="lossFunction">The custom loss.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="learningRate">The learning Rate.</param>
        <param name="decreaseLearningRate">Decrease learning rate as iterations progress.</param>
        <param name="l2RegularizerWeight">L2 regularization weight.</param>
        <param name="numIterations">Number of training iterations through the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the AveragedPerceptron trainer, and a custom loss.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.ML.Runtime.Learners.AveragedPerceptronTrainer" />
      </Docs>
    </Member>
    <Member MemberName="FastTree">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; FastTree (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, int numLeaves = 20, int numTrees = 100, int minDatapointsInLeafs = 10, double learningRate = 0.2, Action&lt;Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer.Arguments&gt; advancedSettings = null, Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; FastTree(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, int32 numLeaves, int32 numTrees, int32 minDatapointsInLeafs, float64 learningRate, class System.Action`1&lt;class Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer/Arguments&gt; advancedSettings, class System.Action`1&lt;class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.FastTree(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Int32,System.Int32,System.Int32,System.Double,System.Action{Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer.Arguments},System.Action{Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FastTree (ctx As BinaryClassificationContext.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional numLeaves As Integer = 20, Optional numTrees As Integer = 100, Optional minDatapointsInLeafs As Integer = 10, Optional learningRate As Double = 0.2, Optional advancedSettings As Action(Of FastTreeBinaryClassificationTrainer.Arguments) = null, Optional onFit As Action(Of IPredictorWithFeatureWeights(Of Single)) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member FastTree : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * int * int * int * double * Action&lt;Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer.Arguments&gt; * Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.Trainers.BinaryClassificationTrainers.FastTree (ctx, label, features, weights, numLeaves, numTrees, minDatapointsInLeafs, learningRate, advancedSettings, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.FastTree</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="numLeaves" Type="System.Int32" />
        <Parameter Name="numTrees" Type="System.Int32" />
        <Parameter Name="minDatapointsInLeafs" Type="System.Int32" />
        <Parameter Name="learningRate" Type="System.Double" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer+Arguments&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The <see cref="T:Microsoft.ML.BinaryClassificationContext" />.</param>
        <param name="label">The label column.</param>
        <param name="features">The features colum.</param>
        <param name="weights">The optional weights column.</param>
        <param name="numLeaves">The maximum number of leaves per decision tree.</param>
        <param name="numTrees">Total number of decision trees to create in the ensemble.</param>
        <param name="minDatapointsInLeafs">The minimal number of datapoints allowed in a leaf of the tree, out of the subsampled data.</param>
        <param name="learningRate">The learning rate.</param>
        <param name="advancedSettings">Algorithm advanced settings.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained. Note that this action cannot change the result in any way;
            it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            FastTree <see cref="T:Microsoft.ML.BinaryClassificationContext" /> extension method.
            Predict a target using a decision tree binary classificaiton model trained with the <see cref="T:Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer" />.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), the calibrated prediction (from 0 to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegressionBinaryClassifier">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; LogisticRegressionBinaryClassifier (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, float l1Weight = 1, float l2Weight = 1, float optimizationTolerance = 1E-07, int memorySize = 20, bool enoforceNoNegativity = false, Action&lt;Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; LogisticRegressionBinaryClassifier(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, float32 l1Weight, float32 l2Weight, float32 optimizationTolerance, int32 memorySize, bool enoforceNoNegativity, class System.Action`1&lt;class Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.LogisticRegressionBinaryClassifier(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Action{Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LogisticRegressionBinaryClassifier (ctx As BinaryClassificationContext.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional l1Weight As Single = 1, Optional l2Weight As Single = 1, Optional optimizationTolerance As Single = 1E-07, Optional memorySize As Integer = 20, Optional enoforceNoNegativity As Boolean = false, Optional onFit As Action(Of ParameterMixingCalibratedPredictor) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member LogisticRegressionBinaryClassifier : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * single * single * single * int * bool * Action&lt;Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.Trainers.BinaryClassificationTrainers.LogisticRegressionBinaryClassifier (ctx, label, features, weights, l1Weight, l2Weight, optimizationTolerance, memorySize, enoforceNoNegativity, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l1Weight" Type="System.Single" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="optimizationTolerance" Type="System.Single" />
        <Parameter Name="memorySize" Type="System.Int32" />
        <Parameter Name="enoforceNoNegativity" Type="System.Boolean" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The binary classificaiton context trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l1Weight">Weight of L1 regularization term.</param>
        <param name="l2Weight">Weight of L2 regularization term.</param>
        <param name="optimizationTolerance">Threshold for optimizer convergence.</param>
        <param name="memorySize">Memory size for <see cref="T:Microsoft.ML.Runtime.Learners.LogisticRegression" />. Lower=faster, less accurate.</param>
        <param name="enoforceNoNegativity">Enforce non-negative weights.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained.  Note that this action cannot change the result in any way; it is only a way for the caller to
            be informed about what was learnt.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Runtime.Learners.LogisticRegression" /> trainer.
            </summary>
        <returns>The predicted output.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; Sdca (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null, Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor,Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; Sdca(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations, class System.Action`2&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor, class Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.Sdca(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Runtime.Learners.LinearBinaryPredictor,Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sdca (ctx As BinaryClassificationContext.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null, Optional onFit As Action(Of LinearBinaryPredictor, ParameterMixingCalibratedPredictor) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor, Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.Trainers.BinaryClassificationTrainers.Sdca (ctx, label, features, weights, l2Const, l1Threshold, maxIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor,Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The binary classification context trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer, and log-loss.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), the calibrated prediction (from 0 to 1), and the predicted label.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sdca">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; Sdca (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.Runtime.ISupportSdcaClassificationLoss loss, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, Nullable&lt;float&gt; l2Const = null, Nullable&lt;float&gt; l1Threshold = null, Nullable&lt;int&gt; maxIterations = null, Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; Sdca(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.Runtime.ISupportSdcaClassificationLoss loss, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, valuetype System.Nullable`1&lt;float32&gt; l2Const, valuetype System.Nullable`1&lt;float32&gt; l1Threshold, valuetype System.Nullable`1&lt;int32&gt; maxIterations, class System.Action`1&lt;class Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.Sdca(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.Runtime.ISupportSdcaClassificationLoss,Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Runtime.Learners.LinearBinaryPredictor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sdca (ctx As BinaryClassificationContext.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), loss As ISupportSdcaClassificationLoss, Optional weights As Scalar(Of Single) = null, Optional l2Const As Nullable(Of Single) = null, Optional l1Threshold As Nullable(Of Single) = null, Optional maxIterations As Nullable(Of Integer) = null, Optional onFit As Action(Of LinearBinaryPredictor) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member Sdca : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.Runtime.ISupportSdcaClassificationLoss * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.Trainers.BinaryClassificationTrainers.Sdca (ctx, label, features, loss, weights, l2Const, l1Threshold, maxIterations, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="loss" Type="Microsoft.ML.Runtime.ISupportSdcaClassificationLoss" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="l2Const" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="l1Threshold" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Learners.LinearBinaryPredictor&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The binary classification context trainer object.</param>
        <param name="label">The label, or dependent variable.</param>
        <param name="features">The features, or independent variables.</param>
        <param name="loss">The custom loss.</param>
        <param name="weights">The optional example weights.</param>
        <param name="l2Const">The L2 regularization hyperparameter.</param>
        <param name="l1Threshold">The L1 regularization hyperparameter. Higher values will tend to lead to more sparse model.</param>
        <param name="maxIterations">The maximum number of passes to perform over the data.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained, as well as the calibrator on top of that model. Note that this action cannot change the
            result in any way; it is only a way for the caller to be informed about what was learnt.</param>
        <summary>
            Predict a target using a linear binary classification model trained with the SDCA trainer, and a custom loss.
            Note that because we cannot be sure that all loss functions will produce naturally calibrated outputs, setting
            a custom loss function will not produce a calibrated probability column.
            </summary>
        <returns>The set of output columns including in order the predicted binary classification score (which will range
            from negative to positive infinity), and the predicted label.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.Sdca(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Action{Microsoft.ML.Runtime.Learners.LinearBinaryPredictor,Microsoft.ML.Runtime.Internal.Calibration.ParameterMixingCalibratedPredictor})" />
      </Docs>
    </Member>
    <Member MemberName="StochasticGradientDescentClassificationTrainer">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;float&gt;,Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt; StochasticGradientDescentClassificationTrainer (this Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers ctx, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; label, Microsoft.ML.StaticPipe.Vector&lt;float&gt; features, Microsoft.ML.StaticPipe.Scalar&lt;float&gt; weights = null, int maxIterations = 20, double initLearningRate = 0.01, float l2Weight = 1E-06, Microsoft.ML.Runtime.ISupportClassificationLossFactory loss = null, Action&lt;Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer.Arguments&gt; advancedSettings = null, Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;float&gt;&gt; onFit = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt;, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt;&gt; StochasticGradientDescentClassificationTrainer(class Microsoft.ML.BinaryClassificationContext/BinaryClassificationTrainers ctx, class Microsoft.ML.StaticPipe.Scalar`1&lt;bool&gt; label, class Microsoft.ML.StaticPipe.Vector`1&lt;float32&gt; features, class Microsoft.ML.StaticPipe.Scalar`1&lt;float32&gt; weights, int32 maxIterations, float64 initLearningRate, float32 l2Weight, class Microsoft.ML.Runtime.ISupportClassificationLossFactory loss, class System.Action`1&lt;class Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer/Arguments&gt; advancedSettings, class System.Action`1&lt;class Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights`1&lt;float32&gt;&gt; onFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.BinaryClassificationTrainers.StochasticGradientDescentClassificationTrainer(Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers,Microsoft.ML.StaticPipe.Scalar{System.Boolean},Microsoft.ML.StaticPipe.Vector{System.Single},Microsoft.ML.StaticPipe.Scalar{System.Single},System.Int32,System.Double,System.Single,Microsoft.ML.Runtime.ISupportClassificationLossFactory,System.Action{Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer.Arguments},System.Action{Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StochasticGradientDescentClassificationTrainer (ctx As BinaryClassificationContext.BinaryClassificationTrainers, label As Scalar(Of Boolean), features As Vector(Of Single), Optional weights As Scalar(Of Single) = null, Optional maxIterations As Integer = 20, Optional initLearningRate As Double = 0.01, Optional l2Weight As Single = 1E-06, Optional loss As ISupportClassificationLossFactory = null, Optional advancedSettings As Action(Of StochasticGradientDescentClassificationTrainer.Arguments) = null, Optional onFit As Action(Of IPredictorWithFeatureWeights(Of Single)) = null) As ValueTuple(Of Scalar(Of Single), Scalar(Of Single), Scalar(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member StochasticGradientDescentClassificationTrainer : Microsoft.ML.BinaryClassificationContext.BinaryClassificationTrainers * Microsoft.ML.StaticPipe.Scalar&lt;bool&gt; * Microsoft.ML.StaticPipe.Vector&lt;single&gt; * Microsoft.ML.StaticPipe.Scalar&lt;single&gt; * int * double * single * Microsoft.ML.Runtime.ISupportClassificationLossFactory * Action&lt;Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer.Arguments&gt; * Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;single&gt;&gt; -&gt; ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;single&gt;, Microsoft.ML.StaticPipe.Scalar&lt;bool&gt;&gt;" Usage="Microsoft.ML.Trainers.BinaryClassificationTrainers.StochasticGradientDescentClassificationTrainer (ctx, label, features, weights, maxIterations, initLearningRate, l2Weight, loss, advancedSettings, onFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;,Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "score", "probability", "predictedLabel" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.BinaryClassificationContext+BinaryClassificationTrainers" RefType="this" />
        <Parameter Name="label" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Boolean&gt;" />
        <Parameter Name="features" Type="Microsoft.ML.StaticPipe.Vector&lt;System.Single&gt;" />
        <Parameter Name="weights" Type="Microsoft.ML.StaticPipe.Scalar&lt;System.Single&gt;" />
        <Parameter Name="maxIterations" Type="System.Int32" />
        <Parameter Name="initLearningRate" Type="System.Double" />
        <Parameter Name="l2Weight" Type="System.Single" />
        <Parameter Name="loss" Type="Microsoft.ML.Runtime.ISupportClassificationLossFactory" />
        <Parameter Name="advancedSettings" Type="System.Action&lt;Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer+Arguments&gt;" />
        <Parameter Name="onFit" Type="System.Action&lt;Microsoft.ML.Runtime.Internal.Internallearn.IPredictorWithFeatureWeights&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="ctx">The binary classificaiton context trainer object.</param>
        <param name="label">The name of the label column.</param>
        <param name="features">The name of the feature column.</param>
        <param name="weights">The name for the example weight column.</param>
        <param name="maxIterations">The maximum number of iterations; set to 1 to simulate online learning.</param>
        <param name="initLearningRate">The initial learning rate used by SGD.</param>
        <param name="l2Weight">The L2 regularization constant.</param>
        <param name="loss">The loss function to use.</param>
        <param name="advancedSettings">A delegate to apply all the advanced arguments to the algorithm.</param>
        <param name="onFit">A delegate that is called every time the
            <see cref="M:Microsoft.ML.StaticPipe.Estimator`3.Fit(Microsoft.ML.StaticPipe.DataView{`0})" /> method is called on the
            <see cref="T:Microsoft.ML.StaticPipe.Estimator`3" /> instance created out of this. This delegate will receive
            the linear model that was trained.  Note that this action cannot change the result in any way; it is only a way for the caller to
            be informed about what was learnt.</param>
        <summary>
             Predict a target using a linear binary classification model trained with the <see cref="T:Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer" /> trainer.
            </summary>
        <returns>The predicted output.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>