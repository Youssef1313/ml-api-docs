<Type Name="SgdBinaryTrainer" FullName="Microsoft.ML.Trainers.SgdBinaryTrainer">
  <TypeSignature Language="C#" Value="public sealed class SgdBinaryTrainer : Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Internal.Calibration.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SgdBinaryTrainer extends Microsoft.ML.Trainers.SgdBinaryTrainerBase`1&lt;class Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Internal.Calibration.PlattCalibrator&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Trainers.SgdBinaryTrainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SgdBinaryTrainer&#xA;Inherits SgdBinaryTrainerBase(Of CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator))" />
  <TypeSignature Language="F#" Value="type SgdBinaryTrainer = class&#xA;    inherit SgdBinaryTrainerBase&lt;CalibratedModelParametersBase&lt;LinearBinaryModelParameters, PlattCalibrator&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Trainers.SgdBinaryTrainerBase&lt;Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Internal.Calibration.PlattCalibrator&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Internal.Calibration.PlattCalibrator&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Train logistic regression using a parallel stochastic gradient method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateModel">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Internal.Calibration.PlattCalibrator&gt; CreateModel (Microsoft.ML.Data.VBuffer&lt;float&gt; weights, float bias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase`2&lt;class Microsoft.ML.Trainers.LinearBinaryModelParameters, class Microsoft.ML.Internal.Calibration.PlattCalibrator&gt; CreateModel(valuetype Microsoft.ML.Data.VBuffer`1&lt;float32&gt; weights, float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SgdBinaryTrainer.CreateModel(Microsoft.ML.Data.VBuffer{System.Single},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateModel (weights As VBuffer(Of Single), bias As Single) As CalibratedModelParametersBase(Of LinearBinaryModelParameters, PlattCalibrator)" />
      <MemberSignature Language="F#" Value="override this.CreateModel : Microsoft.ML.Data.VBuffer&lt;single&gt; * single -&gt; Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Internal.Calibration.PlattCalibrator&gt;" Usage="sgdBinaryTrainer.CreateModel (weights, bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Internal.Calibration.CalibratedModelParametersBase&lt;Microsoft.ML.Trainers.LinearBinaryModelParameters,Microsoft.ML.Internal.Calibration.PlattCalibrator&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weights" Type="Microsoft.ML.Data.VBuffer&lt;System.Single&gt;" />
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="weights">To be added.</param>
        <param name="bias">To be added.</param>
        <summary>
            Given weights and bias trained in <see cref="M:Microsoft.ML.Trainers.SgdBinaryTrainerBase`1.TrainCore(Microsoft.ML.IChannel,Microsoft.ML.Data.RoleMappedData,Microsoft.ML.Trainers.LinearModelParameters,System.Int32)" />,
            <see cref="M:Microsoft.ML.Trainers.SgdBinaryTrainer.CreateModel(Microsoft.ML.Data.VBuffer{System.Single},System.Single)" /> produces the final calibrated linear model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputColumnsCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.ML.SchemaShape.Column[] GetOutputColumnsCore (Microsoft.ML.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.ML.SchemaShape/Column[] GetOutputColumnsCore(class Microsoft.ML.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Trainers.SgdBinaryTrainer.GetOutputColumnsCore(Microsoft.ML.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetOutputColumnsCore (inputSchema As SchemaShape) As SchemaShape.Column()" />
      <MemberSignature Language="F#" Value="override this.GetOutputColumnsCore : Microsoft.ML.SchemaShape -&gt; Microsoft.ML.SchemaShape.Column[]" Usage="sgdBinaryTrainer.GetOutputColumnsCore inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.StandardLearners</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SchemaShape+Column[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>
            Logistic regression's output can naturally be interpreted as probability, so this model has three output columns.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>