<Type Name="ModelParametersBase&lt;TOutput&gt;" FullName="Microsoft.ML.Internal.Internallearn.ModelParametersBase&lt;TOutput&gt;">
  <TypeSignature Language="C#" Value="public abstract class ModelParametersBase&lt;TOutput&gt; : Microsoft.ML.Model.ICanSaveModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelParametersBase`1&lt;TOutput&gt; extends System.Object implements class Microsoft.ML.Model.ICanSaveModel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Internal.Internallearn.ModelParametersBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelParametersBase(Of TOutput)&#xA;Implements ICanSaveModel" />
  <TypeSignature Language="F#" Value="type ModelParametersBase&lt;'Output&gt; = class&#xA;    interface ICanSaveModel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.Model.ICanSaveModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOutput">To be added.</typeparam>
    <summary>
            A base class for predictors producing <typeparamref name="TOutput" />.
            Note: This provides essentially no value going forward. New predictors should just
            derive from the interfaces they need.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Microsoft.ML.Model.ICanSaveModel.Save">
      <MemberSignature Language="C#" Value="void ICanSaveModel.Save (Microsoft.ML.Model.ModelSaveContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.ML.Model.ICanSaveModel.Save(class Microsoft.ML.Model.ModelSaveContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Internal.Internallearn.ModelParametersBase`1.Microsoft#ML#Model#ICanSaveModel#Save(Microsoft.ML.Model.ModelSaveContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (ctx As ModelSaveContext) Implements ICanSaveModel.Save" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.Model.ICanSaveModel.Save(Microsoft.ML.Model.ModelSaveContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="Microsoft.ML.Model.ModelSaveContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
