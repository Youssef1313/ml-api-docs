<Type Name="FeatureContributionCalculatingEstimator" FullName="Microsoft.ML.Data.FeatureContributionCalculatingEstimator">
  <TypeSignature Language="C#" Value="public sealed class FeatureContributionCalculatingEstimator : Microsoft.ML.Data.TrivialEstimator&lt;Microsoft.ML.Data.FeatureContributionCalculatingTransformer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FeatureContributionCalculatingEstimator extends Microsoft.ML.Data.TrivialEstimator`1&lt;class Microsoft.ML.Data.FeatureContributionCalculatingTransformer&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Data.FeatureContributionCalculatingEstimator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FeatureContributionCalculatingEstimator&#xA;Inherits TrivialEstimator(Of FeatureContributionCalculatingTransformer)" />
  <TypeSignature Language="F#" Value="type FeatureContributionCalculatingEstimator = class&#xA;    inherit TrivialEstimator&lt;FeatureContributionCalculatingTransformer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Data</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.Data.TrivialEstimator&lt;Microsoft.ML.Data.FeatureContributionCalculatingTransformer&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTransformer">Microsoft.ML.Data.FeatureContributionCalculatingTransformer</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Estimator producing a FeatureContributionCalculatingTransformer which scores the model on an input dataset and
            computes model-specific contribution scores for each feature.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureContributionCalculatingEstimator (Microsoft.ML.IHostEnvironment env, Microsoft.ML.Internal.Internallearn.ICalculateFeatureContribution modelParameters, string featureColumn = &quot;Features&quot;, int top = 10, int bottom = 10, bool normalize = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ML.IHostEnvironment env, class Microsoft.ML.Internal.Internallearn.ICalculateFeatureContribution modelParameters, string featureColumn, int32 top, int32 bottom, bool normalize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.FeatureContributionCalculatingEstimator.#ctor(Microsoft.ML.IHostEnvironment,Microsoft.ML.Internal.Internallearn.ICalculateFeatureContribution,System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (env As IHostEnvironment, modelParameters As ICalculateFeatureContribution, Optional featureColumn As String = &quot;Features&quot;, Optional top As Integer = 10, Optional bottom As Integer = 10, Optional normalize As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.Data.FeatureContributionCalculatingEstimator : Microsoft.ML.IHostEnvironment * Microsoft.ML.Internal.Internallearn.ICalculateFeatureContribution * string * int * int * bool -&gt; Microsoft.ML.Data.FeatureContributionCalculatingEstimator" Usage="new Microsoft.ML.Data.FeatureContributionCalculatingEstimator (env, modelParameters, featureColumn, top, bottom, normalize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="env" Type="Microsoft.ML.IHostEnvironment" />
        <Parameter Name="modelParameters" Type="Microsoft.ML.Internal.Internallearn.ICalculateFeatureContribution" />
        <Parameter Name="featureColumn" Type="System.String" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="normalize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="env">The environment to use.</param>
        <param name="modelParameters">Trained model parameters that support Feature Contribution Calculation and which will be used for scoring.</param>
        <param name="featureColumn">The name of the feature column that will be used as input.</param>
        <param name="top">The number of features with highest positive contributions for each data sample that will be retained in the FeatureContribution column.
            Note that if there are fewer features with positive contributions than <paramref name="top" />, the rest will be returned as zeros.</param>
        <param name="bottom">The number of features with least negative contributions for each data sample that will be retained in the FeatureContribution column.
            Note that if there are fewer features with negative contributions than <paramref name="bottom" />, the rest will be returned as zeros.</param>
        <param name="normalize">Whether the feature contributions should be normalized to the [-1, 1] interval.</param>
        <summary>
            Feature Contribution Calculation computes model-specific contribution scores for each feature.
            Note that this functionality is not supported by all the models. See <see cref="T:Microsoft.ML.Data.FeatureContributionCalculatingTransformer" /> for a list of the suported models.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSchema">
      <MemberSignature Language="C#" Value="public override Microsoft.ML.Core.Data.SchemaShape GetOutputSchema (Microsoft.ML.Core.Data.SchemaShape inputSchema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.ML.Core.Data.SchemaShape GetOutputSchema(class Microsoft.ML.Core.Data.SchemaShape inputSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Data.FeatureContributionCalculatingEstimator.GetOutputSchema(Microsoft.ML.Core.Data.SchemaShape)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutputSchema (inputSchema As SchemaShape) As SchemaShape" />
      <MemberSignature Language="F#" Value="override this.GetOutputSchema : Microsoft.ML.Core.Data.SchemaShape -&gt; Microsoft.ML.Core.Data.SchemaShape" Usage="featureContributionCalculatingEstimator.GetOutputSchema inputSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Data</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Core.Data.SchemaShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSchema" Type="Microsoft.ML.Core.Data.SchemaShape" />
      </Parameters>
      <Docs>
        <param name="inputSchema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>